import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

//import org.openkinect.*;
//import org.openkinect.processing.*;

import processing.core.PApplet;

import javax.media.opengl.GLCanvas;
import javax.swing.JPanel;
import javax.swing.JSplitPane;

import OpenGL.OpenGL;
import renderer.KinectRenderer;
import renderer.TestRenderer;

import udpReader.*;
import Panel.*;

public class MainClass {
	//Kinect kinect;
	public MainClass() {
		Frame frame = new Frame("OpenGL");
		GLCanvas canvas = new GLCanvas();
		OpenGL openGL = new OpenGL(canvas);
		
		KinectRenderer renderer = new KinectRenderer();
		openGL.addRenderer(renderer);
		
		canvas.addGLEventListener(openGL);
		renderer.size = 1;
		
		
		//Controls panel = new Controls();
		
		
		JPanel panel = new JPanel();
		panel.setBackground (Color.black);
		panel.setMaximumSize(new Dimension(50, 150);)
		
		
		buffer frameBuffer = new buffer();
		readerThread udp = new readerThread(frameBuffer);
		fileThread file = new fileThread(frameBuffer);
		//udp.start();
		file.start();
		renderer.frameBuffer = frameBuffer;
		
		frame.setLayout(new GridBagLayout());
		GridBagConstraints gbc = new GridBagConstraints();
        gbc.anchor = GridBagConstraints.FIRST_LINE_START;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.weightx = 0.8;
        gbc.weighty = 1.0;
        gbc.gridx = 0;
        gbc.gridy = 0;
        
        frame.add(canvas, gbc);
        gbc.weightx = 0.2;
        gbc.gridx = 1;
        frame.add(panel, gbc);

		
		frame.setSize(740, 480);
		frame.setVisible(true);
		frame.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});
        
    }
	
	public static void main(String[] args) {
		new MainClass();
	}
}